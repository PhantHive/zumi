name: Music Player Server Deployment
on:
    push:
        tags:
            - 'v*'
jobs:
    build-and-deploy:
        runs-on: self-hosted
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm install

            - name: Build server
              run: npm run build:server

            - name: Create directories
              run: |
                  mkdir -p uploads/thumbnails
                  mkdir -p data

            - name: Check if tag exists
              id: check_tag
              run: |
                  TAG_NAME=$(git describe --tags --abbrev=0)
                  if [ -z "$TAG_NAME" ]; then
                   echo "No tags found. Skipping deployment."
                   exit 1
                  fi
                  echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: zaphial/music-server:${{ env.TAG_NAME }}
                  no-cache: true

            - name: Deploy to server
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PROD_SERVER_IP }}
                username: ${{ secrets.PROD_SERVER_USER }}
                key: ${{ secrets.PROD_SERVER_SSH }}
                port: ${{ secrets.PROD_SERVER_PORT }}
                script: |
                  # Stop and remove existing container
                  docker stop music-server || true
                  docker rm music-server || true

                  # Create directories
                  mkdir -p /opt/music-server/uploads/thumbnails
                  mkdir -p /opt/music-server/data

                  # Load and validate API_PORT
                  API_PORT=$(grep API_PORT /home/Phearion/Zumi/.env | cut -d '=' -f2 | tr -d '\r\n ')
                  
                  echo "Checking JWT_SECRET in .env..."
                  grep JWT_SECRET /home/Phearion/Zumi/.env || echo "JWT_SECRET not found!"

                  # Debug: Print the port to verify its value
                  echo "Using API_PORT: $API_PORT"

                  # Run docker with env-file
                  docker run \
                    -d \
                    --name music-server \
                    --env-file /home/Phearion/Zumi/.env \
                    -p "${API_PORT}:${API_PORT}" \
                    -v /opt/music-server/uploads:/app/uploads \
                    -v /opt/music-server/data:/app/data \
                    zaphial/music-server:${{ env.TAG_NAME }}

                  # Check if container started successfully
                  echo "Checking container logs..."
                  sleep 2
                  docker logs music-server